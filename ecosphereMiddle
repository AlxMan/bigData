-- 1. 添加flag
-- flag ：上一条数据时间 减 当前数据时间 大于30分钟的 标记为1 反之为0
select user_id, click_time,
if(nvl((unix_timestamp(click_time) - unix_timestamp(lag(click_time) over(partition by user_id order by click_time)))/60,0)>30,1,0) flag
from user_clicklog;
-- 2. 添加gid
-- gid：将flag逐一相加，成分组id
select user_id, click_time,
sum(flag) over(partition by user_id order by click_time rows between unbounded preceding and current row) gid
from (
	select user_id, click_time,
	if(nvl((unix_timestamp(click_time) - unix_timestamp(lag(click_time) over(partition by user_id order by click_time)))/60,0)>30,1,0) flag
	from user_clicklog
)t1;
-- 3. 根据id和gid 进行分组 添加排序
select user_id, click_time,
row_number() over(partition by user_id,gid order by click_time) rowNum
from (
  select user_id, click_time,
  sum(flag) over(partition by user_id order by click_time rows between unbounded preceding and current row) gid
  from (
    select user_id, click_time,
    if(nvl((unix_timestamp(click_time) - unix_timestamp(lag(click_time) over(partition by user_id order by click_time)))/60,0)>30,1,0) flag
    from user_clicklog
  )t1
)t2;


-- 执行结果

+---------+---------------------+--------+
| user_id | click_time          | rownum |
+---------+---------------------+--------+
| A       | 2020-05-15 01:30:00 | 1      |
| A       | 2020-05-15 01:35:00 | 2      |
| A       | 2020-05-15 02:00:00 | 3      |
| A       | 2020-05-15 03:00:10 | 1      |
| A       | 2020-05-15 03:05:00 | 2      |
| B       | 2020-05-15 02:03:00 | 1      |
| B       | 2020-05-15 02:29:40 | 2      |
| B       | 2020-05-15 04:00:00 | 1      |
+---------+---------------------+--------+
